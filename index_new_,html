<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Grocery List</title>
    <style>
        /* Modern CSS Reset with Vibrant Color Theme */
        :root {
            /* Blue Color Palette */
            --deep-blue: #1a237e;
            --primary-blue: #0d47a1;
            --bright-blue: #1565c0;
            --light-blue: #1976d2;
            --sky-blue: #42a5f5;
            --pale-blue: #bbdefb;
            --accent-blue: #2962ff;
            --teal: #00bcd4;
            --cyan: #00b8d4;
            --white: #ffffff;
            
            /* Primary Colors */
            --primary: var(--primary-blue);
            --primary-light: var(--light-blue);
            --primary-dark: var(--deep-blue);
            --primary-bg: linear-gradient(135deg, #f5f9ff 0%, #e3f2fd 100%);
            
            /* Accent Colors */
            --accent: var(--accent-blue);
            --accent-light: var(--sky-blue);
            --accent-2: var(--teal);
            --accent-3: var(--cyan);
            --accent-4: var(--pale-blue);
            
            /* Grey Scale */
            --grey-100: #f8f9fc;
            --grey-200: #e9ecef;
            --grey-300: #dee2e6;
            --grey-400: #adb5bd;
            --grey-500: #6c757d;
            --grey-600: #495057;
            --grey-700: #343a40;
            --grey-800: #212529;
            
            /* Status Colors */
            --success: #28a745;
            --warning: #ffc107;
            --danger: #dc3545;
            --info: #17a2b8;
            
            /* UI Elements */
            --light: var(--grey-100);
            --dark: var(--grey-800);
            --gray: var(--grey-500);
            --light-gray: var(--grey-200);
            
            /* Effects */
            --border-radius: 10px;
            --box-shadow: 0 4px 15px rgba(0, 0, 0, 0.08);
            --transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
            
            /* Gradients */
            --gradient-primary: linear-gradient(135deg, var(--primary-blue) 0%, var(--deep-blue) 100%);
            --gradient-accent: linear-gradient(135deg, var(--accent-blue) 0%, var(--teal) 100%);
            --gradient-light: linear-gradient(135deg, var(--sky-blue) 0%, var(--pale-blue) 100%);
            --gradient-ocean: linear-gradient(135deg, #0077b6 0%, #00b4d8 100%);
            --gradient-deep: linear-gradient(135deg, #03045e 0%, #0077b6 100%);
            --gradient-card: linear-gradient(135deg, #ffffff 0%, #f8f9ff 100%);
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        @import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap');
        
        body {
            font-family: 'Poppins', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, sans-serif;
            line-height: 1.6;
            background: var(--primary-bg);
            background-attachment: fixed;
            color: var(--grey-800);
            padding: 0;
            min-height: 100vh;
            animation: gradientBG 15s ease infinite;
            background-size: 200% 200%;
        }
        
        @keyframes gradientBG {
            0% { background-position: 0% 50%; }
            50% { background-position: 100% 50%; }
            100% { background-position: 0% 50%; }
        }

        .container {
            max-width: 900px;
            margin: 2rem auto;
            padding: 2.5rem;
            background: rgba(255, 255, 255, 0.9);
            min-height: auto;
            border-radius: 20px;
            box-shadow: 0 10px 50px rgba(67, 97, 238, 0.15);
            backdrop-filter: blur(12px);
            border: 1px solid rgba(255, 255, 255, 0.3);
            position: relative;
            overflow: hidden;
        }
        
        .container::before {
            content: '';
            position: absolute;
            top: -50%;
            left: -50%;
            width: 200%;
            height: 200%;
            background: radial-gradient(circle, rgba(116, 185, 255, 0.1) 0%, rgba(0, 0, 0, 0) 70%);
            z-index: -1;
            animation: rotate 30s linear infinite;
        }
        
        @keyframes rotate {
            from { transform: rotate(0deg); }
            to { transform: rotate(360deg); }
        }

        h1 {
            text-align: center;
            margin: 0 auto 2.5rem;
            font-weight: 800;
            font-size: 3rem;
            background: linear-gradient(135deg, #1a237e, #0d47a1, #1565c0);
            background-size: 200% auto;
            background-clip: text;
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            padding: 1rem 2rem;
            text-shadow: 2px 2px 8px rgba(13, 71, 161, 0.1);
            position: relative;
            animation: gradientText 8s ease infinite;
            letter-spacing: -0.5px;
            display: inline-block;
            border-radius: 12px;
            box-shadow: 0 4px 15px rgba(25, 118, 210, 0.1);
            background-color: rgba(255, 255, 255, 0.9);
            backdrop-filter: blur(8px);
            border: 1px solid rgba(255, 255, 255, 0.2);
        }
        
        @keyframes gradientText {
            0% { 
                background-position: 0% 50%;
                box-shadow: 0 4px 15px rgba(25, 118, 210, 0.1);
            }
            50% { 
                background-position: 100% 50%;
                box-shadow: 0 8px 25px rgba(25, 118, 210, 0.15);
            }
            100% { 
                background-position: 0% 50%;
                box-shadow: 0 4px 15px rgba(25, 118, 210, 0.1);
            }
        }
        
        h1::after {
            content: '';
            display: block;
            width: 80px;
            height: 4px;
            background: var(--gradient-accent);
            margin: 1rem auto 0;
            border-radius: 2px;
        }

        .input-section {
            background: rgba(255, 255, 255, 0.7);
            padding: 2rem;
            border-radius: 16px;
            box-shadow: 0 8px 32px rgba(67, 97, 238, 0.1);
            margin-bottom: 2.5rem;
            display: flex;
            gap: 1.2rem;
            flex-wrap: wrap;
            align-items: center;
            border: 1px solid rgba(255, 255, 255, 0.3);
            transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
            position: relative;
            overflow: hidden;
        }
        
        .input-section::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 4px;
            background: var(--gradient-rainbow);
            background-size: 200% auto;
            animation: gradientBG 8s ease infinite;
        }
        
        .input-section:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
        }

        input, select {
            padding: 0.9rem 1.2rem;
            border: 2px solid var(--grey-200);
            border-radius: var(--border-radius);
            font-size: 1rem;
            transition: var(--transition);
            flex: 1;
            min-width: 200px;
            background-color: var(--grey-100);
            color: var(--grey-800);
            box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.05);
        }

        input:focus, select:focus {
            outline: none;
            border-color: var(--primary-light);
            box-shadow: 0 0 0 3px rgba(100, 163, 255, 0.25);
            background-color: white;
        }

        button {
            background: var(--gradient-primary);
            color: white;
            border: none;
            padding: 0.9rem 1.8rem;
            border-radius: 50px;
            cursor: pointer;
            font-weight: 600;
            text-transform: uppercase;
            letter-spacing: 0.5px;
            transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
            box-shadow: 0 4px 15px rgba(58, 123, 213, 0.3);
            position: relative;
            overflow: hidden;
            z-index: 1;
        }
        
        button::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: var(--gradient-accent);
            opacity: 0;
            transition: opacity 0.4s ease;
            z-index: -1;
        }

        button:hover {
            transform: translateY(-3px);
            box-shadow: 0 6px 20px rgba(58, 123, 213, 0.4);
        }
        
        button:hover::before {
            opacity: 1;
        }

        button:active {
            transform: translateY(0);
        }

        .controls {
            display: flex;
            justify-content: space-between;
            flex-wrap: wrap;
            gap: 1rem;
            margin-bottom: 1.5rem;
            background: white;
            padding: 1.5rem;
            border-radius: var(--border-radius);
            box-shadow: var(--box-shadow);
        }

        .sort-controls, .filter-controls {
            display: flex;
            align-items: center;
            gap: 0.75rem;
            flex-wrap: wrap;
        }

        label {
            font-weight: 600;
            color: var(--dark);
            white-space: nowrap;
        }

        .grocery-list {
            display: flex;
            flex-direction: column;
            gap: 0.75rem;
            margin-top: 1.5rem;
        }

        .grocery-item {
            background: rgba(255, 255, 255, 0.9);
            border: 1px solid rgba(66, 165, 245, 0.2);
            padding: 1.25rem 1.5rem;
            border-radius: 12px;
            display: flex;
            justify-content: space-between;
            align-items: center;
            transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
            box-shadow: 0 2px 12px rgba(13, 71, 161, 0.08);
            position: relative;
            overflow: hidden;
            margin-bottom: 0.75rem;
            transform: translateY(0);
            opacity: 1;
            will-change: transform, opacity, box-shadow;
        }
        
        .grocery-item:nth-child(odd) {
            background: rgba(255, 255, 255, 0.95);
        }
        
        .grocery-item:hover {
            transform: translateY(-3px);
            box-shadow: 0 8px 25px rgba(25, 118, 210, 0.15);
            border-color: rgba(66, 165, 245, 0.4);
            background: white;
        }
        
        .grocery-item::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 4px;
            height: 100%;
            background: var(--gradient-primary);
            transition: all 0.3s ease;
            opacity: 0;
            z-index: 1;
        }
        
        .grocery-item:hover::before {
            opacity: 1;
            width: 5px;
        }
        
        .grocery-item:active {
            transform: translateY(0);
            box-shadow: 0 2px 15px rgba(25, 118, 210, 0.1);
        }

        .grocery-item .item-content {
            display: flex;
            align-items: center;
            gap: 1rem;
            flex-grow: 1;
        }
        
        .grocery-item .item-icon {
            font-size: 1.5rem;
            width: 2.5rem;
            height: 2.5rem;
            border-radius: 12px;
            background: rgba(67, 97, 238, 0.1);
            display: flex;
            align-items: center;
            justify-content: center;
            flex-shrink: 0;
        }
        
        .grocery-item .item-details {
            flex-grow: 1;
        }
        
        .grocery-item .item-meta {
            display: flex;
            align-items: center;
            gap: 0.75rem;
            margin-top: 0.25rem;
        }
        
        .grocery-item .category-badge {
            background: var(--gradient-accent);
            color: white;
            padding: 0.25rem 0.75rem;
            border-radius: 50px;
            font-size: 0.75rem;
            font-weight: 600;
            text-transform: capitalize;
            box-shadow: 0 2px 8px rgba(25, 118, 210, 0.2);
        }
        
        .grocery-item small {
            color: var(--grey-500);
            font-size: 0.8rem;
        }
        
        .grocery-item .delete-btn {
            background: rgba(255, 255, 255, 0.9);
            border: 1px solid var(--grey-200);
            width: 2.25rem;
            height: 2.25rem;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            color: var(--primary-blue);
            transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
            position: relative;
            overflow: hidden;
            box-shadow: 0 2px 8px rgba(13, 71, 161, 0.1);
        }
        
        .grocery-item .delete-btn:hover {
            background: var(--primary-blue);
            color: white;
            transform: rotate(90deg);
            box-shadow: 0 4px 12px rgba(25, 118, 210, 0.3);
        }
        
        .grocery-item .delete-btn::before {
            content: attr(data-tooltip);
            position: absolute;
            top: -35px;
            left: 50%;
            transform: translateX(-50%);
            background: #333;
            color: white;
            padding: 0.25rem 0.75rem;
            border-radius: 4px;
            font-size: 0.75rem;
            white-space: nowrap;
            opacity: 0;
            pointer-events: none;
            transition: all 0.2s ease;
        }
        
        .grocery-item .delete-btn:hover::before {
            opacity: 1;
            top: -30px;
        }
        
        .grocery-item:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 25px rgba(58, 123, 213, 0.15);
            border-color: rgba(100, 163, 255, 0.3);
        }
        
        .grocery-item:hover::before {
            width: 6px;
        }

        .grocery-item div:first-child {
            display: flex;
            flex-direction: column;
            gap: 0.5rem;
        }

        .grocery-item strong {
            font-size: 1.1rem;
            color: var(--dark);
        }

        .grocery-item span {
            background: var(--gradient-accent);
            color: white;
            padding: 0.4rem 1.1rem;
            border-radius: 50px;
            font-size: 0.8rem;
            font-weight: 600;
            align-self: flex-start;
            box-shadow: 0 4px 12px rgba(247, 37, 133, 0.3);
            text-transform: uppercase;
            letter-spacing: 0.8px;
            position: relative;
            overflow: hidden;
            z-index: 1;
        }
        
        .grocery-item span::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: linear-gradient(45deg, var(--electric-purple), var(--vibrant-blue));
            opacity: 0;
            transition: opacity 0.3s ease;
            z-index: -1;
        }
        
        .grocery-item span:hover::before {
            opacity: 1;
        }

        .grocery-item button {
            background: linear-gradient(135deg, #ff6b6b, #ff8787);
            padding: 0.6rem 1.2rem;
            font-size: 0.85rem;
            border-radius: 50px;
            box-shadow: 0 4px 10px rgba(220, 53, 69, 0.2);
            transition: all 0.3s ease;
        }

        .grocery-item button:hover {
            background: linear-gradient(135deg, #ff5252, #ff6b6b);
            transform: translateY(-2px);
            box-shadow: 0 6px 15px rgba(220, 53, 69, 0.3);
        }

        /* Empty state */
        .empty-message {
            text-align: center;
            color: var(--primary-blue);
            padding: 3rem 2rem;
            background: rgba(255, 255, 255, 0.8);
            border-radius: 16px;
            box-shadow: 0 8px 32px rgba(13, 71, 161, 0.1);
            font-style: italic;
            border: 2px dashed var(--sky-blue);
            transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
            position: relative;
            overflow: hidden;
            backdrop-filter: blur(10px);
            max-width: 400px;
            margin: 0 auto;
        }
        
        .empty-message div {
            font-size: 3rem;
            margin-bottom: 1rem;
            display: inline-block;
            animation: bounce 2s infinite;
        }
        
        .empty-message p {
            margin: 0;
            line-height: 1.6;
        }
        
        @keyframes bounce {
            0%, 100% { 
                transform: translateY(0) rotate(0deg);
                animation-timing-function: cubic-bezier(0.8, 0, 1, 1);
            }
            50% { 
                transform: translateY(-15px) rotate(5deg);
                animation-timing-function: cubic-bezier(0, 0, 0.2, 1);
            }
        }
        
        .empty-message:hover {
            background: white;
            border-color: var(--primary-light);
            box-shadow: 0 8px 25px rgba(58, 123, 213, 0.1);
        }

        /* Responsive Design */
        /* Floating Animations */
        @keyframes float {
            0% { transform: translateY(0px); }
            50% { transform: translateY(-10px); }
            100% { transform: translateY(0px); }
        }
        
        .floating {
            animation: float 6s ease-in-out infinite;
        }
        
        .floating-2 {
            animation: float 8s ease-in-out infinite;
            animation-delay: 1s;
        }
        
        .floating-3 {
            animation: float 10s ease-in-out infinite;
            animation-delay: 2s;
        }
        
        /* Toast Notifications */
        .toast-container {
            position: fixed;
            top: 20px;
            right: 20px;
            z-index: 1000;
            display: flex;
            flex-direction: column;
            gap: 10px;
            max-width: 320px;
            width: 100%;
        }
        
        .toast {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            border-radius: 12px;
            padding: 16px 20px;
            box-shadow: 0 8px 30px rgba(13, 71, 161, 0.15);
            border-left: 4px solid var(--accent-blue);
            transform: translateX(120%);
            opacity: 0;
            transition: all 0.4s cubic-bezier(0.68, -0.55, 0.27, 1.55);
            display: flex;
            align-items: center;
            gap: 12px;
            animation: slideIn 0.5s forwards;
            color: var(--grey-800);
        }
        
        @keyframes slideIn {
            to {
                transform: translateX(0);
                opacity: 1;
            }
        }
        
        .toast.success {
            border-left-color: var(--teal);
            background: rgba(0, 188, 212, 0.1);
        }
        
        .toast.error {
            border-left-color: var(--primary-blue);
            background: rgba(13, 71, 161, 0.1);
        }
        
        .toast.warning {
            border-left-color: var(--accent-blue);
            background: rgba(66, 165, 245, 0.1);
        }
        
        .toast i {
            font-size: 1.5rem;
            flex-shrink: 0;
        }
        
        .toast .content {
            flex-grow: 1;
        }
        
        .toast .close {
            background: none;
            border: none;
            font-size: 1.2rem;
            cursor: pointer;
            opacity: 0.7;
            transition: opacity 0.2s;
            padding: 0;
            line-height: 1;
        }
        
        .toast .close:hover {
            opacity: 1;
        }
        
        /* Decorative Elements */
        .decorative-shape {
            position: absolute;
            border-radius: 50%;
            filter: blur(40px);
            opacity: 0.6;
            z-index: -1;
        }
        
        .shape-1 {
            width: 300px;
            height: 300px;
            background: var(--neon-pink);
            top: -100px;
            right: -100px;
        }
        
        .shape-2 {
            width: 400px;
            height: 400px;
            background: var(--vivid-cyan);
            bottom: -150px;
            left: -150px;
        }
        
        @media (max-width: 768px) {
            .container {
                padding: 1rem;
            }

            .input-section, .controls {
                flex-direction: column;
                align-items: stretch;
            }

            .sort-controls, .filter-controls {
                flex-direction: column;
                align-items: flex-start;
                width: 100%;
            }

            button, input, select {
                width: 100%;
            }

            .grocery-item {
                flex-direction: column;
                gap: 1rem;
                text-align: center;
            }

            .grocery-item div:first-child {
                align-items: center;
            }

            .grocery-item button {
                width: 100%;
            }
        }

        /* Animations */
        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(10px); }
            to { opacity: 1; transform: translateY(0); }
        }

        .grocery-item {
            animation: fadeIn 0.3s ease-out forwards;
        }
    </style>
</head>
<body>
    <div class="container">
        <div style="display: flex; justify-content: center; width: 100%;">
            <h1>Grocery List</h1>
        </div>
        
        <div class="input-section">
            <input type="text" id="itemName" placeholder="Item name" required>
            <input type="text" id="itemCategory" placeholder="Category (e.g., Fruits, Vegetables)" required>
            <button id="addButton">Add Item</button>
        </div>

        <div class="controls">
            <div class="sort-controls">
                <label>Sort by:</label>
                <select id="sortBy">
                    <option value="name">Name (A-Z)</option>
                    <option value="name-desc">Name (Z-A)</option>
                    <option value="date">Date (Newest)</option>
                    <option value="date-asc">Date (Oldest)</option>
                </select>
            </div>
            
            <div class="filter-controls">
                <label>Filter by category:</label>
                <select id="filterCategory">
                    <option value="all">All Categories</option>
                </select>
            </div>
        </div>

        <div id="groceryList" class="grocery-list">
            <!-- Items will be added here by JavaScript -->
        </div>
    </div>

    <script>
        // Simple version of the app
        let items = [];
        
        // DOM Elements
        const itemName = document.getElementById('itemName');
        const itemCategory = document.getElementById('itemCategory');
        const addButton = document.getElementById('addButton');
        const groceryList = document.getElementById('groceryList');
        const filterCategory = document.getElementById('filterCategory');
        const sortBy = document.getElementById('sortBy');
        
        // Load items from localStorage
        function loadItems() {
            const saved = localStorage.getItem('groceryItems');
            if (saved) {
                items = JSON.parse(saved);
                renderItems();
            }
        }
        
        // Save items to localStorage
        function saveItems() {
            localStorage.setItem('groceryItems', JSON.stringify(items));
        }
        
        // Add a new item
        function addItem() {
            const name = itemName.value.trim();
            const category = itemCategory.value.trim();
            
            if (name && category) {
                const newItem = {
                    id: Date.now(),
                    name: name,
                    category: category,
                    date: new Date()
                };
                
                items.push(newItem);
                saveItems();
                updateCategoryDropdown();
                renderItems();
                
                // Clear inputs
                itemName.value = '';
                itemCategory.value = '';
                itemName.focus();
            }
        }
        
        // Delete an item
        function deleteItem(id) {
            items = items.filter(item => item.id !== id);
            saveItems();
            updateCategoryDropdown(); // Update categories after deletion
            renderItems();
        }
        
        // Render all items with sorting and filtering
        function renderItems() {
            groceryList.innerHTML = '';
            
            if (items.length === 0) {
                groceryList.innerHTML = '<p>No items yet. Add some groceries!</p>';
                return;
            }
            
            // Get selected category filter
            const selectedCategory = filterCategory.value;
            
            // Filter items by category if a specific category is selected
            let filteredItems = selectedCategory === 'All Categories' || !selectedCategory 
                ? [...items] 
                : items.filter(item => item.category === selectedCategory);
            
            // Get sort option
            const sortOption = sortBy.value;
            
            // Sort items based on selected option
            filteredItems.sort((a, b) => {
                switch(sortOption) {
                    case 'name':
                        return a.name.localeCompare(b.name);
                    case 'name-desc':
                        return b.name.localeCompare(a.name);
                    case 'date':
                        return new Date(b.date) - new Date(a.date);
                    case 'date-asc':
                        return new Date(a.date) - new Date(b.date);
                    default:
                        return 0;
                }
            });
            
            if (filteredItems.length === 0) {
                groceryList.innerHTML = '<p>No items match the selected filter.</p>';
                return;
            }
            
            // Display the filtered and sorted items
            filteredItems.forEach(item => {
                const div = document.createElement('div');
                div.className = 'grocery-item';
                div.innerHTML = `
                    <div>
                        <strong>${item.name}</strong>
                        <span style="color: #666; margin-left: 10px;">${item.category}</span>
                        <div style="font-size: 0.8em; color: #999;">
                            ${new Date(item.date).toLocaleString()}
                        </div>
                    </div>
                    <button onclick="deleteItem(${item.id})">Delete</button>
                `;
                groceryList.appendChild(div);
            });
        }
        
        // Event Listeners
        addButton.addEventListener('click', addItem);
        
        // Update category dropdown with unique categories
        function updateCategoryDropdown() {
            // Get unique categories
            const categories = ['All Categories'];
            items.forEach(item => {
                if (!categories.includes(item.category)) {
                    categories.push(item.category);
                }
            });
            
            // Update dropdown
            filterCategory.innerHTML = categories.map(category => 
                `<option value="${category}">${category}</option>`
            ).join('');
        }

        // Initialize the app
        document.addEventListener('DOMContentLoaded', () => {
            loadItems();
            updateCategoryDropdown();
            
            // Add Enter key support
            [itemName, itemCategory].forEach(input => {
                input.addEventListener('keypress', (e) => {
                    if (e.key === 'Enter') addItem();
                });
            });
            
            // Add filter/sort event listeners
            filterCategory.addEventListener('change', renderItems);
            sortBy.addEventListener('change', renderItems);
            
            console.log('Grocery list app initialized!');
        });
        
        // Toast notification function
        function showToast(message, type = 'info', duration = 3000) {
            const toastContainer = document.getElementById('toastContainer');
            const toast = document.createElement('div');
            toast.className = `toast ${type}`;
            
            let icon = 'info-circle';
            if (type === 'success') icon = 'check-circle';
            else if (type === 'error') icon = 'exclamation-circle';
            else if (type === 'warning') icon = 'exclamation-triangle';
            
            toast.innerHTML = `
                <i class="fas fa-${icon}"></i>
                <div class="content">${message}</div>
                <button class="close">&times;</button>
            `;
            
            // Add click event to close button
            const closeBtn = toast.querySelector('.close');
            closeBtn.addEventListener('click', () => {
                hideToast(toast);
            });
            
            toastContainer.appendChild(toast);
            
            // Auto-remove toast after duration
            if (duration > 0) {
                setTimeout(() => {
                    hideToast(toast);
                }, duration);
            }
            
            return toast;
        }
        
        function hideToast(toast) {
            toast.style.animation = 'slideOut 0.5s forwards';
            setTimeout(() => {
                toast.remove();
            }, 500);
        }
        
        // Add slideOut animation
        const style = document.createElement('style');
        style.textContent = `
            @keyframes slideOut {
                from { transform: translateX(0); opacity: 1; }
                to { transform: translateX(120%); opacity: 0; }
            }
            
            @keyframes pop {
                0% { transform: scale(1); }
                50% { transform: scale(1.05); }
                100% { transform: scale(1); }
            }
            
            @keyframes slideUp {
                from { transform: translateY(20px); opacity: 0; }
                to { transform: translateY(0); opacity: 1; }
            }
            
            .grocery-item {
                animation: slideUp 0.5s ease-out forwards;
                opacity: 0;
            }
            
            .grocery-item.added {
                animation: pop 0.3s ease-out;
            }
            
            .grocery-item.removed {
                animation: slideOut 0.3s ease-out forwards;
            }
        `;
        document.head.appendChild(style);
    </script>
</body>
</html>
